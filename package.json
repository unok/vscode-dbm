{
  "name": "vscode-dbm",
  "displayName": "Database Manager (DBM)",
  "description": "Advanced database management extension with Cursor AI integration",
  "version": "0.1.0",
  "engines": {
    "vscode": "^1.85.0"
  },
  "categories": ["Database", "Data Science", "Visualization"],
  "keywords": ["database", "sql", "mysql", "postgresql", "sqlite", "cursor-ai", "dbm"],
  "activationEvents": ["*"],
  "main": "./dist/extension/extension.js",
  "contributes": {
    "commands": [
      {
        "command": "vscode-dbm.openConnection",
        "title": "Open Database Connection",
        "category": "DB Manager",
        "icon": "$(plug)"
      },
      {
        "command": "vscode-dbm.newQuery",
        "title": "New SQL Query",
        "category": "DB Manager",
        "icon": "$(file-code)"
      },
      {
        "command": "vscode-dbm.openDataGrid",
        "title": "Open DataGrid",
        "category": "DB Manager",
        "icon": "$(table)"
      },
      {
        "command": "vscode-dbm.openDashboard",
        "title": "Open Dashboard",
        "category": "DB Manager",
        "icon": "$(dashboard)"
      },
      {
        "command": "vscode-dbm.runQuery",
        "title": "Run SQL Query",
        "category": "DB Manager",
        "icon": "$(play)"
      },
      {
        "command": "vscode-dbm.selectFromTable",
        "title": "SELECT FROM Table",
        "category": "DB Manager",
        "icon": "$(table)"
      },
      {
        "command": "vscode-dbm.refreshConnections",
        "title": "Refresh Connections",
        "category": "DB Manager",
        "icon": "$(refresh)"
      },
      {
        "command": "vscode-dbm.addConnection",
        "title": "Add Connection",
        "category": "DB Manager",
        "icon": "$(add)"
      },
      {
        "command": "vscode-dbm.newSQLFile",
        "title": "New SQL File",
        "category": "DB Manager",
        "icon": "$(new-file)"
      },
      {
        "command": "vscode-dbm.runQueryInPanel",
        "title": "Run SQL Query in Panel",
        "category": "DB Manager",
        "icon": "$(output)"
      }
    ],
    "views": {
      "dbManager": [
        {
          "id": "dbManager.connections",
          "name": "データベース接続",
          "when": "true"
        },
        {
          "type": "webview",
          "id": "dbManager.webview",
          "name": "クイックアクション",
          "when": "true"
        }
      ]
    },
    "viewsContainers": {
      "activitybar": [
        {
          "id": "dbManager",
          "title": "Database Manager",
          "icon": "$(database)"
        }
      ]
    },
    "menus": {
      "commandPalette": [
        {
          "command": "vscode-dbm.openConnection"
        },
        {
          "command": "vscode-dbm.newQuery"
        },
        {
          "command": "vscode-dbm.runQuery"
        },
        {
          "command": "vscode-dbm.newSQLFile"
        },
        {
          "command": "vscode-dbm.runQueryInPanel"
        }
      ],
      "view/title": [
        {
          "command": "vscode-dbm.addConnection",
          "when": "view == dbManager.connections",
          "group": "navigation"
        },
        {
          "command": "vscode-dbm.refreshConnections",
          "when": "view == dbManager.connections",
          "group": "navigation"
        },
        {
          "command": "vscode-dbm.openConnection",
          "when": "view == dbManager.webview",
          "group": "navigation"
        }
      ],
      "view/item/context": [
        {
          "command": "vscode-dbm.selectFromTable",
          "when": "view == dbManager.connections && viewItem == table",
          "group": "query@1"
        },
        {
          "command": "vscode-dbm.selectFromTable",
          "when": "view == dbManager.connections && viewItem == view",
          "group": "query@1"
        }
      ],
      "editor/context": [
        {
          "command": "vscode-dbm.runQuery",
          "when": "editorTextFocus && (resourceExtname == .sql || editorLangId == sql)",
          "group": "dbmanager@1"
        },
        {
          "command": "vscode-dbm.runQueryInPanel",
          "when": "editorTextFocus && (resourceExtname == .sql || editorLangId == sql)",
          "group": "dbmanager@2"
        }
      ]
    },
    "keybindings": [
      {
        "command": "vscode-dbm.runQuery",
        "key": "ctrl+shift+e",
        "mac": "cmd+shift+e",
        "when": "editorTextFocus && (resourceExtname == .sql || editorLangId == sql)"
      },
      {
        "command": "vscode-dbm.newQuery",
        "key": "ctrl+shift+q",
        "mac": "cmd+shift+q"
      },
      {
        "command": "vscode-dbm.runQueryInPanel",
        "key": "ctrl+shift+r",
        "mac": "cmd+shift+r",
        "when": "editorTextFocus && (resourceExtname == .sql || editorLangId == sql)"
      }
    ]
  },
  "configuration": {
    "title": "Database Manager",
    "properties": {
      "vscode-dbm.mysql.host": {
        "type": "string",
        "default": "localhost",
        "description": "MySQL server hostname"
      },
      "vscode-dbm.mysql.port": {
        "type": "number",
        "default": 3306,
        "description": "MySQL server port"
      },
      "vscode-dbm.mysql.database": {
        "type": "string",
        "default": "test_db",
        "description": "MySQL database name"
      },
      "vscode-dbm.mysql.username": {
        "type": "string",
        "default": "root",
        "description": "MySQL username"
      },
      "vscode-dbm.mysql.password": {
        "type": "string",
        "default": "",
        "description": "MySQL password"
      },
      "vscode-dbm.postgresql.host": {
        "type": "string",
        "default": "localhost",
        "description": "PostgreSQL server hostname"
      },
      "vscode-dbm.postgresql.port": {
        "type": "number",
        "default": 5432,
        "description": "PostgreSQL server port"
      },
      "vscode-dbm.postgresql.database": {
        "type": "string",
        "default": "postgres",
        "description": "PostgreSQL database name"
      },
      "vscode-dbm.postgresql.username": {
        "type": "string",
        "default": "postgres",
        "description": "PostgreSQL username"
      },
      "vscode-dbm.postgresql.password": {
        "type": "string",
        "default": "",
        "description": "PostgreSQL password"
      },
      "vscode-dbm.sqlite.database": {
        "type": "string",
        "default": ":memory:",
        "description": "SQLite database path"
      },
      "vscode-dbm.connections": {
        "type": "array",
        "default": [],
        "description": "Saved database connections",
        "items": {
          "type": "object",
          "properties": {
            "id": {
              "type": "string",
              "description": "Unique connection identifier"
            },
            "name": {
              "type": "string",
              "description": "Connection display name"
            },
            "type": {
              "type": "string",
              "enum": ["mysql", "postgresql", "sqlite"],
              "description": "Database type"
            },
            "host": {
              "type": "string",
              "description": "Database host"
            },
            "port": {
              "type": "number",
              "description": "Database port"
            },
            "database": {
              "type": "string",
              "description": "Database name or file path"
            },
            "username": {
              "type": "string",
              "description": "Database username"
            },
            "password": {
              "type": "string",
              "description": "Database password (encrypted)"
            },
            "ssl": {
              "type": "boolean",
              "description": "Use SSL connection"
            }
          }
        }
      }
    }
  },
  "scripts": {
    "dev": "docker compose -f docker-compose.dev.yml up -d && npm run dev:vite",
    "dev:vite": "NODE_ENV=development npx vite --host 0.0.0.0",
    "dev:extension": "NODE_ENV=development npm run build:extension",
    "dev:db": "docker compose -f docker-compose.dev.yml up -d",
    "dev:stop": "docker compose -f docker-compose.dev.yml down",
    "build": "rm -rf dist && npm run build:extension && npm run build:webview && npm run check:native",
    "build:extension": "tsc -p ./tsconfig.extension.json",
    "build:webview": "npx vite build",
    "package": "npx @vscode/vsce package",
    "watch": "tsc -watch -p ./tsconfig.json",
    "test": "vitest run --config vitest.config.ts",
    "test:ci": "vitest run --config vitest.config.ts src/test/ci-check.test.ts",
    "test:unit": "vitest run --config vitest.config.ts",
    "test:integration": "echo 'Integration tests will be implemented'",
    "test:e2e": "echo 'E2E tests will be implemented'",
    "test:watch": "vitest --config vitest.config.ts",
    "test:coverage": "vitest run --coverage --config vitest.config.ts",
    "test:setup": "docker-compose -f docker-compose.test.yml up -d",
    "test:teardown": "docker-compose -f docker-compose.test.yml down",
    "setup:test-env": "chmod +x scripts/init-databases.sh && ./scripts/init-databases.sh",
    "lint": "biome check .",
    "lint:check": "biome check .",
    "lint:fix": "biome check --write .",
    "format": "biome format --write .",
    "type-check": "tsc --noEmit",
    "vscode:prepublish": "npm run build",
    "precommit": "npm run lint:check && npm run type-check && npm run build",
    "ci:check": "npm run lint:fix || echo 'Some lint issues remain' && npm run lint:check && npm run type-check && npm run build",
    "ci:local": "npm run ci:check",
    "prepare": "husky",
    "check:native": "node scripts/check-native-modules.js",
    "check:deps": "npm run check:native"
  },
  "devDependencies": {
    "@biomejs/biome": "^1.9.4",
    "@testing-library/jest-dom": "^6.6.3",
    "@testing-library/react": "^16.1.0",
    "@testing-library/user-event": "^14.5.2",
    "@types/better-sqlite3": "^7.6.11",
    "@types/node": "^22.10.2",
    "@types/pg": "^8.11.10",
    "@types/react": "^19.0.2",
    "@types/react-dom": "^19.0.2",
    "@types/sql.js": "^1.4.9",
    "@types/uuid": "^10.0.0",
    "@types/vscode": "^1.85.0",
    "@vitejs/plugin-react": "^4.3.4",
    "@vitest/coverage-v8": "^2.1.8",
    "@vscode/vsce": "^3.4.2",
    "autoprefixer": "^10.4.21",
    "happy-dom": "^15.11.6",
    "husky": "^9.1.7",
    "msw": "^2.6.8",
    "postcss": "^8.5.4",
    "typescript": "^5.7.2",
    "vite": "^6.0.3",
    "vitest": "^2.1.8"
  },
  "dependencies": {
    "@tanstack/react-table": "^8.20.5",
    "better-sqlite3": "^11.6.0",
    "monaco-editor": "^0.52.2",
    "mysql2": "^3.11.4",
    "pg": "^8.13.1",
    "react": "^19.0.0",
    "react-dom": "^19.0.0",
    "sql.js": "^1.13.0",
    "tailwindcss": "^3.4.17",
    "uuid": "^11.0.3"
  },
  "repository": {
    "type": "git",
    "url": "https://github.com/your-username/vscode-dbm.git"
  },
  "license": "MIT",
  "publisher": "unok",
  "galleryBanner": {
    "color": "#1e1e1e",
    "theme": "dark"
  }
}
